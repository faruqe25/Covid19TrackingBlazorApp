@page "/summary"

@inject HttpClient http
@using Covid19Info.Helper

<style>
    #cols {
        background-color: ghostwhite;
        border-radius: 8px;
        box-shadow: 0 4px 6px 0 rgba(0,0,0,0.2),0 5px 6px 0 rgba(0,0,0,0.4);
    }

        #cols h1 {
            text-align: center;
            padding: 2%;
        }

    table {
        text-align: center;
    }

    .loader {
        position: fixed;
        left: 0px;
        top: 0px;
        width: 100%;
        height: 100%;
        z-index: 9999;
        background: url('//upload.wikimedia.org/wikipedia/commons/thumb/e/e5/Phi_fenomeni.gif/50px-Phi_fenomeni.gif') 50% 50% no-repeat rgb(249,249,249);
    }

    .form_Center {
        margin-left: 25%;
        margin-right: 25%;
        width: 50%;
    }
</style>
@if (Status.Length != 0)
{
    <div class="alert alert-danger text-danger">
        @Status
    </div>
}
@if (CountryWises != null && CountryName != null)
{
    <div class="row mt-3" style="margin-bottom:30px">
        <div class="col-12 col-sm-12 col-md-12 col-lg-12 col-xl-12 table-responsive" id="cols">


            <form class="form-inline justify-content-center" @onsubmit="Search" style="padding-bottom:50px;padding-top:20px;">
                <label class="sr-only" for="yourEmail">Email</label>
                <div class="input-group mb-2 mr-sm-2 mb-sm-0">
                    <div class="input-group-addon"></div>
                    <input @bind="SearchByCountryName" type="text" class="form-control" placeholder="Your Country Name...">
                </div>
                <button type="submit" class="btn btn-primary my-2 my-sm-0">Search!</button>
            </form>
            <h4 class="text-center">Last Updated:@CountryWises[0].lastUpdate </h4>

            <table class="table table-sm">
                <thead>
                    <tr>
                        <th>Serial</th>
                        <th>Total Effected</th>
                        <th>Total Deaths</th>
                        <th>Total Recovered </th>
                        <th>Country </th>
                    </tr>
                </thead>
                <tbody>
                    @{ int serial = 1;}
                    @foreach (var item in CountryWises)
                    {
                        <tr>
                            <td>@serial</td>
                            <td>@item.confirmed.value</td>
                            <td>@item.deaths.value</td>
                            <td>@item.recovered.value</td>

                            <td>@item.countryName</td>

                        </tr>
                        serial++;
                    }


                </tbody>
            </table>

        </div>

    </div>
}
else
{
    <div class="loader ">


    </div>
}
@code {


    private string Status { get; set; } = string.Empty;
    private string SearchByCountryName { get; set; }
    private CountryInfo CountryName { get; set; }
    private int CurrentPage { get; set; } = 1;

    public CountryWise CountryWise { get; set; }
    public List<CountryWise> CountryWises { get; set; } = new List<CountryWise>();



    private async Task Search()
    {
        try
        {
            if (SearchByCountryName.Length > 0)
            {
                CountryWise = await http.GetFromJsonAsync<CountryWise>("https://covid19.mathdro.id/api/countries/" + SearchByCountryName);

                if (CountryWise != null)
                {
                    CountryWises = new List<CountryWise>();
                    CountryWise.countryName = SearchByCountryName;
                    CountryWises.Add(CountryWise);
                    Status = string.Empty;
                }
                else
                {
                    SearchByCountryName = "";
                }
            }
            else
            {
                Status = "No Data Found... Try again with proper country name ";

            }

        }
        catch (Exception e)
        {
            Status = "No Data Found... Try again with proper country name ";

            Console.WriteLine(e.Message);
        }



    }

    private async Task GetAllData()
    {
        CountryName = await http.GetFromJsonAsync<CountryInfo>("sample-data/CountryList.json");

        if (CountryName != null)
        {

            for (int i = 0; i < 15; i++)
            {
                try
                {
                    CountryWise = await http.GetFromJsonAsync<CountryWise>("https://covid19.mathdro.id/api/countries/" + CountryName.countries[i].name);

                    if (CountryWise != null)
                    {
                        CountryWise.countryName = CountryName.countries[i].name;
                        CountryWises.Add(CountryWise);
                        CountryWise = null;


                    }

                }
                catch (Exception e)
                {

                    Console.WriteLine(e.Message);
                }
            }
        }
    }



    protected async override Task OnInitializedAsync()
    {

        await GetAllData();
    }
}
